on:
  push:
    branches:
      - main

concurrency:
  group: build-root-fs 

jobs:
  build-root-fs-and-publish:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: install packages
        run: sudo apt install -y tree apt-utils
      - run: curl -L 'https://gitlab.mister-muffin.de/josch/mmdebstrap/archive/0.8.6.tar.gz' | tar -xz
      - run: sudo cp -a ./mmdebstrap/mmdebstrap /usr/bin/mmdebstrap
      - run: sudo cp -a ./mmdebstrap/proxysolver /usr/lib/apt/solvers/mmdebstrap-dump-solution

      - name: Make deb cache
        run: mkdir -p ./deb-cache/

      - name: Cache pex root
        id: cache-pex-root
        uses: actions/cache@v3
        with:
          path: ~/.pex
          key: pex-root-cache-${{ github.sha }}
          restore-keys: |
            pex-root-cache-

      - name: Cache deb files
        id: cache-debs
        uses: actions/cache@v3
        with:
          path: ./deb-cache
          key: deb-cache-v3-${{ github.sha }}
          restore-keys: |
            deb-cache-v3-

      - run: tree ./deb-cache/

      # Import Debian Bullseye Key 0x605C66F00D6C9793 for apt on Ubuntu to
      # verify packages
      - run: sudo cp ./605C66F00D6C9793.asc /etc/apt/trusted.gpg.d/
      # Get mmdebstrap
      - run: curl -L 'https://gitlab.mister-muffin.de/josch/mmdebstrap/archive/0.8.6.tar.gz' | tar -xz
      # Get pex and create venv from lock file
      - run: curl -L 'https://github.com/pantsbuild/pex/releases/download/v2.1.86/pex' > pex && chmod +x pex
      - run: ./pex -v --lock pex.lock --venv --include-tools --no-compress --sh-boot -o venv.pex && PEX_TOOLS=1 ./venv.pex -v venv ./venv && rm ./venv.pex
      - run: ./venv/bin/python3 ./build.py
      - run: ./venv/bin/python3 ./printnotes.py rootfs.tar.zst > notes
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body_path: ./notes
          files: |
            rootfs.tar.zst

